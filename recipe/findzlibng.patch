diff --git a/CMakeLists.txt b/CMakeLists.txt
index a472797c..fbf9bdf7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -21,7 +21,7 @@
 #       build a lite version (only with BloscLZ and LZ4/LZ4HC) of the blosc library
 #   DEACTIVATE_AVX2: default OFF
 #       do not attempt to build with AVX2 instructions
-#   DEACTIVATE_ZLIB: default OFF
+#   DEACTIVATE_ZLIB_NG: default OFF
 #       do not include support for the Zlib library
 #   DEACTIVATE_ZSTD: default OFF
 #       do not include support for the Zstd library
@@ -106,16 +106,16 @@ option(BUILD_LITE
     "Build a lite version (only with BloscLZ and LZ4/LZ4HC) of the blosc library." OFF)
 option(DEACTIVATE_AVX2
     "Do not attempt to build with AVX2 instructions" OFF)
-option(DEACTIVATE_ZLIB
-    "Do not include support for the ZLIB library." OFF)
+option(DEACTIVATE_ZLIB_NG
+    "Do not include support for the ZLIB_NG library." OFF)
 option(DEACTIVATE_ZSTD
     "Do not include support for the ZSTD library." OFF)
 option(DEACTIVATE_IPP
     "Do not include support for the Intel IPP library." ON)
 option(PREFER_EXTERNAL_LZ4
     "Find and use external LZ4 library instead of included sources." OFF)
-option(PREFER_EXTERNAL_ZLIB
-    "Find and use external ZLIB library instead of included sources." OFF)
+option(PREFER_EXTERNAL_ZLIB_NG
+    "Find and use external ZLIB_NG library instead of included sources." OFF)
 option(PREFER_EXTERNAL_ZSTD
     "Find and use external ZSTD library instead of included sources." OFF)
 
@@ -138,7 +138,7 @@ if(BUILD_PLUGINS AND BUILD_LITE)
 endif()
 
 if(BUILD_LITE)
-    set(DEACTIVATE_ZLIB ON)
+    set(DEACTIVATE_ZLIB_NG ON)
     set(DEACTIVATE_ZSTD ON)
 endif()
 
@@ -148,36 +148,36 @@ else()
     message(STATUS "Using LZ4 internal sources.")
 endif()
 
-if(NOT DEACTIVATE_ZLIB)
-    # import the ZLIB_ROOT environment variable to help finding the zlib library
+if(NOT DEACTIVATE_ZLIB_NG)
+    # import the ZLIB_NG_ROOT environment variable to help finding the zlib library
     if(PREFER_EXTERNAL_ZLIB)
-        set(ZLIB_ROOT $ENV{ZLIB_ROOT})
-        find_package(ZLIB)
-        if(NOT ZLIB_FOUND)
+        set(ZLIB_NG_ROOT $ENV{ZLIB_NG_ROOT})
+        find_package(ZLIB_NG)
+        if(NOT ZLIB_NG_FOUND)
             message(STATUS "No ZLIB found.  Using ZLIB-NG internal sources.")
-            set(HAVE_ZLIB_NG TRUE)
         endif()
-    else()
-        message(STATUS "Using ZLIB-NG internal sources for ZLIB support.")
         set(HAVE_ZLIB_NG TRUE)
     endif()
-    # HAVE_ZLIB will be set to true because even if the library is not found,
-    # we will use the included sources for it
-    set(HAVE_ZLIB TRUE)
-endif()
 
-if(HAVE_ZLIB_NG)
-    set(ZLIB_NG_DIR "zlib-ng-2.0.5")  # update to the actual included version
-    add_definitions(-DZLIB_COMPAT)
-    set(ZLIB_COMPAT TRUE)
-    set(SKIP_INSTALL_ALL TRUE)
-    set(BUILD_SHARED_LIBS FALSE)
-    set(ZLIB_ENABLE_TESTS OFF)
-    add_subdirectory("internal-complibs/${ZLIB_NG_DIR}")
-
-    file(COPY
-            ${CMAKE_CURRENT_BINARY_DIR}/internal-complibs/${ZLIB_NG_DIR}/zconf.h
-            DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/internal-complibs/${ZLIB_NG_DIR}/)
+    if(NOT HAVE_ZLIB_NG)
+        message(STATUS "Using ZLIB-NG internal sources for ZLIB support.")
+
+        set(ZLIB_NG_DIR "zlib-ng-2.0.5")  # update to the actual included version
+        add_definitions(-DZLIB_COMPAT)
+        set(ZLIB_COMPAT TRUE)
+        set(SKIP_INSTALL_ALL TRUE)
+        set(BUILD_SHARED_LIBS FALSE)
+        set(ZLIB_ENABLE_TESTS OFF)
+        add_subdirectory("internal-complibs/${ZLIB_NG_DIR}")
+
+        file(COPY
+                ${CMAKE_CURRENT_BINARY_DIR}/internal-complibs/${ZLIB_NG_DIR}/zconf.h
+                DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/internal-complibs/${ZLIB_NG_DIR}/)
+
+        # HAVE_ZLIB will be set to true because even if the library is not found,
+        # we will use the included sources for it
+        set(HAVE_ZLIB_NG TRUE)
+    endif()
 endif()
 
 if(NOT DEACTIVATE_ZSTD)
diff --git a/bench/CMakeLists.txt b/bench/CMakeLists.txt
index 3d72c055..e906ae22 100644
--- a/bench/CMakeLists.txt
+++ b/bench/CMakeLists.txt
@@ -51,7 +51,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_shuffle_1 ${BENCH_EXE} blosclz ${SHUFFLE_1_OPTS})
         add_test(test_lz4_shuffle_1 ${BENCH_EXE} lz4 ${SHUFFLE_1_OPTS})
         # add_test(test_lz4hc_shuffle_1 ${BENCH_EXE} lz4hc ${SHUFFLE_1_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_shuffle_1 ${BENCH_EXE} zlib ${SHUFFLE_1_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -65,7 +65,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_shuffle_n ${BENCH_EXE} blosclz ${SHUFFLE_N_OPTS})
         add_test(test_lz4_shuffle_n ${BENCH_EXE} lz4 ${SHUFFLE_N_OPTS})
         add_test(test_lz4hc_shuffle_n ${BENCH_EXE} lz4hc ${SHUFFLE_N_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             add_test(test_zlib_shuffle_n ${BENCH_EXE} zlib ${SHUFFLE_N_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -79,7 +79,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_bitshuffle_1 ${BENCH_EXE} blosclz ${BITSHUFFLE_1_OPTS})
         add_test(test_lz4_bitshuffle_1 ${BENCH_EXE} lz4 ${BITSHUFFLE_1_OPTS})
         # add_test(test_lz4hc_bitshuffle_1 ${BENCH_EXE} lz4hc ${BITSHUFFLE_1_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_bitshuffle_1 ${BENCH_EXE} zlib ${BITSHUFFLE_1_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -93,7 +93,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_bitshuffle_n ${BENCH_EXE} blosclz ${BITSHUFFLE_N_OPTS})
         add_test(test_lz4_bitshuffle_n ${BENCH_EXE} lz4 ${BITSHUFFLE_N_OPTS})
         # add_test(test_lz4hc_bitshuffle_n ${BENCH_EXE} lz4hc ${BITSHUFFLE_N_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_bitshuffle_n ${BENCH_EXE} zlib ${BITSHUFFLE_N_OPTS})
         endif()
         if(HAVE_ZSTD)
diff --git a/cmake/FindZLIBNG.cmake b/cmake/FindZLIBNG.cmake
new file mode 100644
index 00000000..2e7afb6c
--- /dev/null
+++ b/cmake/FindZLIBNG.cmake
@@ -0,0 +1,8 @@
+find_path(ZLIB_NG_INCLUDE_DIR zlib-ng.h)
+
+find_library(ZLIB_NG_LIBRARY NAMES z-ng)
+
+if(ZLIB_NG_INCLUDE_DIR AND ZLIB_NG_LIBRARY)
+    set(ZLIB_NG_FOUND TRUE)
+    message(STATUS "Found ZLIB_NG library: ${ZLIB_NG_LIBRARY}")
+endif()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index a472797c..71b6058b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -21,14 +21,14 @@
 #       build a lite version (only with BloscLZ and LZ4/LZ4HC) of the blosc library
 #   DEACTIVATE_AVX2: default OFF
 #       do not attempt to build with AVX2 instructions
-#   DEACTIVATE_ZLIB: default OFF
+#   DEACTIVATE_ZLIB_NG: default OFF
 #       do not include support for the Zlib library
 #   DEACTIVATE_ZSTD: default OFF
 #       do not include support for the Zstd library
 #   PREFER_EXTERNAL_LZ4: default OFF
 #       when found, use the installed LZ4 libs instead of included
 #       sources
-#   PREFER_EXTERNAL_ZLIB: default OFF
+#   PREFER_EXTERNAL_ZLIB_NG: default OFF
 #       when found, use the installed ZLIB libs instead of included
 #       MINIZ sources
 #   PREFER_EXTERNAL_ZSTD: default OFF
@@ -106,16 +106,16 @@ option(BUILD_LITE
     "Build a lite version (only with BloscLZ and LZ4/LZ4HC) of the blosc library." OFF)
 option(DEACTIVATE_AVX2
     "Do not attempt to build with AVX2 instructions" OFF)
-option(DEACTIVATE_ZLIB
-    "Do not include support for the ZLIB library." OFF)
+option(DEACTIVATE_ZLIB_NG
+    "Do not include support for the ZLIB_NG library." OFF)
 option(DEACTIVATE_ZSTD
     "Do not include support for the ZSTD library." OFF)
 option(DEACTIVATE_IPP
     "Do not include support for the Intel IPP library." ON)
 option(PREFER_EXTERNAL_LZ4
     "Find and use external LZ4 library instead of included sources." OFF)
-option(PREFER_EXTERNAL_ZLIB
-    "Find and use external ZLIB library instead of included sources." OFF)
+option(PREFER_EXTERNAL_ZLIB_NG
+    "Find and use external ZLIB_NG library instead of included sources." OFF)
 option(PREFER_EXTERNAL_ZSTD
     "Find and use external ZSTD library instead of included sources." OFF)
 
@@ -138,7 +138,7 @@ if(BUILD_PLUGINS AND BUILD_LITE)
 endif()
 
 if(BUILD_LITE)
-    set(DEACTIVATE_ZLIB ON)
+    set(DEACTIVATE_ZLIB_NG ON)
     set(DEACTIVATE_ZSTD ON)
 endif()
 
@@ -148,36 +148,36 @@ else()
     message(STATUS "Using LZ4 internal sources.")
 endif()
 
-if(NOT DEACTIVATE_ZLIB)
-    # import the ZLIB_ROOT environment variable to help finding the zlib library
-    if(PREFER_EXTERNAL_ZLIB)
-        set(ZLIB_ROOT $ENV{ZLIB_ROOT})
-        find_package(ZLIB)
-        if(NOT ZLIB_FOUND)
+if(NOT DEACTIVATE_ZLIB_NG)
+    # import the ZLIB_NG_ROOT environment variable to help finding the zlib library
+    if(PREFER_EXTERNAL_ZLIB_NG)
+        set(ZLIB_NG_ROOT $ENV{ZLIB_NG_ROOT})
+        find_package(ZLIB_NG)
+        if(NOT ZLIB_NG_FOUND)
             message(STATUS "No ZLIB found.  Using ZLIB-NG internal sources.")
-            set(HAVE_ZLIB_NG TRUE)
         endif()
-    else()
-        message(STATUS "Using ZLIB-NG internal sources for ZLIB support.")
         set(HAVE_ZLIB_NG TRUE)
     endif()
-    # HAVE_ZLIB will be set to true because even if the library is not found,
-    # we will use the included sources for it
-    set(HAVE_ZLIB TRUE)
-endif()
 
-if(HAVE_ZLIB_NG)
-    set(ZLIB_NG_DIR "zlib-ng-2.0.5")  # update to the actual included version
-    add_definitions(-DZLIB_COMPAT)
-    set(ZLIB_COMPAT TRUE)
-    set(SKIP_INSTALL_ALL TRUE)
-    set(BUILD_SHARED_LIBS FALSE)
-    set(ZLIB_ENABLE_TESTS OFF)
-    add_subdirectory("internal-complibs/${ZLIB_NG_DIR}")
-
-    file(COPY
-            ${CMAKE_CURRENT_BINARY_DIR}/internal-complibs/${ZLIB_NG_DIR}/zconf.h
-            DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/internal-complibs/${ZLIB_NG_DIR}/)
+    if(NOT HAVE_ZLIB_NG)
+        message(STATUS "Using ZLIB-NG internal sources for ZLIB support.")
+
+        set(ZLIB_NG_DIR "zlib-ng-2.0.5")  # update to the actual included version
+        add_definitions(-DZLIB_COMPAT)
+        set(ZLIB_COMPAT TRUE)
+        set(SKIP_INSTALL_ALL TRUE)
+        set(BUILD_SHARED_LIBS FALSE)
+        set(ZLIB_ENABLE_TESTS OFF)
+        add_subdirectory("internal-complibs/${ZLIB_NG_DIR}")
+
+        file(COPY
+                ${CMAKE_CURRENT_BINARY_DIR}/internal-complibs/${ZLIB_NG_DIR}/zconf.h
+                DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/internal-complibs/${ZLIB_NG_DIR}/)
+
+        # HAVE_ZLIB will be set to true because even if the library is not found,
+        # we will use the included sources for it
+        set(HAVE_ZLIB_NG TRUE)
+    endif()
 endif()
 
 if(NOT DEACTIVATE_ZSTD)
diff --git a/bench/CMakeLists.txt b/bench/CMakeLists.txt
index 3d72c055..e906ae22 100644
--- a/bench/CMakeLists.txt
+++ b/bench/CMakeLists.txt
@@ -51,7 +51,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_shuffle_1 ${BENCH_EXE} blosclz ${SHUFFLE_1_OPTS})
         add_test(test_lz4_shuffle_1 ${BENCH_EXE} lz4 ${SHUFFLE_1_OPTS})
         # add_test(test_lz4hc_shuffle_1 ${BENCH_EXE} lz4hc ${SHUFFLE_1_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_shuffle_1 ${BENCH_EXE} zlib ${SHUFFLE_1_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -65,7 +65,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_shuffle_n ${BENCH_EXE} blosclz ${SHUFFLE_N_OPTS})
         add_test(test_lz4_shuffle_n ${BENCH_EXE} lz4 ${SHUFFLE_N_OPTS})
         add_test(test_lz4hc_shuffle_n ${BENCH_EXE} lz4hc ${SHUFFLE_N_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             add_test(test_zlib_shuffle_n ${BENCH_EXE} zlib ${SHUFFLE_N_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -79,7 +79,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_bitshuffle_1 ${BENCH_EXE} blosclz ${BITSHUFFLE_1_OPTS})
         add_test(test_lz4_bitshuffle_1 ${BENCH_EXE} lz4 ${BITSHUFFLE_1_OPTS})
         # add_test(test_lz4hc_bitshuffle_1 ${BENCH_EXE} lz4hc ${BITSHUFFLE_1_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_bitshuffle_1 ${BENCH_EXE} zlib ${BITSHUFFLE_1_OPTS})
         endif()
         if(HAVE_ZSTD)
@@ -93,7 +93,7 @@ if(BUILD_TESTS)
         add_test(test_blosclz_bitshuffle_n ${BENCH_EXE} blosclz ${BITSHUFFLE_N_OPTS})
         add_test(test_lz4_bitshuffle_n ${BENCH_EXE} lz4 ${BITSHUFFLE_N_OPTS})
         # add_test(test_lz4hc_bitshuffle_n ${BENCH_EXE} lz4hc ${BITSHUFFLE_N_OPTS})
-        if(HAVE_ZLIB)
+        if(HAVE_ZLIB_NG)
             # add_test(test_zlib_bitshuffle_n ${BENCH_EXE} zlib ${BITSHUFFLE_N_OPTS})
         endif()
         if(HAVE_ZSTD)
diff --git a/cmake/FindZLIB_NG.cmake b/cmake/FindZLIB_NG.cmake
new file mode 100644
index 00000000..2e7afb6c
--- /dev/null
+++ b/cmake/FindZLIB_NG.cmake
@@ -0,0 +1,8 @@
+find_path(ZLIB_NG_INCLUDE_DIR zlib-ng.h)
+
+find_library(ZLIB_NG_LIBRARY NAMES z-ng)
+
+if(ZLIB_NG_INCLUDE_DIR AND ZLIB_NG_LIBRARY)
+    set(ZLIB_NG_FOUND TRUE)
+    message(STATUS "Found ZLIB_NG library: ${ZLIB_NG_LIBRARY}")
+endif()
